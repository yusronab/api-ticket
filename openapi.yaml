openapi: 3.0.0
info:
  title: Garudanih API - OpenAPI 3.0
  version: 0.0.1
servers:
  - description: Production
    url: https://api-ticket.up.railway.app/
  - description: Development
    url: http://localhost:8000/
tags:
  - name: Users
    description: Contain every operation about User Resource
  - name: Admins
    description: Contain every operation about Admin Resource
  - name: Tickets
    description: Contain every operation about Ticket Resource
  - name: transaction
    description: All about process user ticket reservation
  - name: notify
    description: As log activity when member doing transaction
paths:
  /v1/user/login:
    post:
      tags:
        - Users
      summary: Logs user into the system
      description: "User login to the app"
      operationId: LoginUser
      requestBody:
        $ref: "#/components/requestBodies/LoginRequest"
      responses:
        "200":
          $ref: "#/components/responses/LoginResponse"
        "404":
          description: An error that occurs either when the user is not found or the password is wrong
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/UserNotFound"
                - $ref: "#/components/schemas/WrongPassword"

  /v1/user/register:
    post:
      tags:
        - Users
      summary: Create new user
      description: Create new account with member role
      operationId: CreateUser
      requestBody:
        $ref: "#/components/requestBodies/UserRegister"
      responses:
        "201":
          $ref: "#/components/responses/UserRegisterResponse"
        "400":
          description: An error occurs either when the user input email that already exists, uploads an image bigger than 2 MB, upload image apart from PNG, JPG or JPEG
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/EmailExistResponse"
                - $ref: "#/components/schemas/BiggerThan2MB"
                - $ref: "#/components/schemas/BadReqUpload"

  /v1/user/current:
    get:
      security:
      - bearerAuth: []
      tags:
        - Users
      summary: Get current User
      description: Get current user who logged in
      operationId: CurrentUser
      parameters:
        - in: header
          name: token
          description: The token from who's login
          required: true
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiJ9.eyJSb2xlIjoiQWRtaW4iLCJJc3N1ZXIiOiJJc3N1ZXIiLCJVc2VybmFtZSI6IkphdmFJblVzZSIsImV4cCI6MTY2OTUyOTg4NiwiaWF0IjoxNjY5NTI5ODg2fQ.dS6B2S9bjN5mHA8Zu5iKgRnQKmwRKv8QKl7CzPJGdys
      responses:
        "200":
          $ref: "#/components/responses/DataUser"
        "401":
          $ref: "#/components/responses/Unauthorized"

  /v1/user/update:
    put:
      security:
      - bearerAuth: []
      tags:
        - Users
      summary: Update User by who's login
      operationId: UpdateCar
      description: "Update new User to the database"
      parameters:
        - in: header
          name: token
          description: The token from who's login
          required: true
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiJ9.eyJSb2xlIjoiQWRtaW4iLCJJc3N1ZXIiOiJJc3N1ZXIiLCJVc2VybmFtZSI6IkphdmFJblVzZSIsImV4cCI6MTY2OTUyOTg4NiwiaWF0IjoxNjY5NTI5ODg2fQ.dS6B2S9bjN5mHA8Zu5iKgRnQKmwRKv8QKl7CzPJGdys
      requestBody: 
        $ref: "#/components/requestBodies/UserUpdate"
      responses:
        "200":
          $ref: "#/components/responses/DataUser"
        "400":
          description: An error occurs either when the user input email that already exists, uploads an image bigger than 2 MB, upload image apart from PNG, JPG or JPEG
          content:
            application/json:
              schema:
                oneOf:
                - $ref: "#/components/schemas/BadReqUpload"
                - $ref: "#/components/schemas/BiggerThan2MB"
                - $ref: "#/components/schemas/UploadFail"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "422":
          $ref: "#/components/responses/FailedUpdate"

  /v1/user/delete:
    delete:
      security:
        - bearerAuth: []
      summary: Delete User by token
      operationId: DeleteCar
      description: Delete user by token, this is soft delete and data user still in database
      tags:
        - Users
      parameters:
        - in: header
          name: token
          description: Token user from login
          required: true
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NCwibmFtZSI6bnVsbCwicm9sZSI6Im1lbWJlciIsImVtYWlsIjoidGVzdEBnbWFpbC5jb20iLCJpYXQiOjE2Njk1MzExMDJ9.QsScd8E0t5kIjvnJqwKCl7Vp_ZzcZL33QYHfsn3tGkM
      responses:
        "204":
          description: "Success deleting current user login"
        "422":
          $ref: "#/components/responses/FailedUpdate"
          
  /v1/user/history:
    get:
      security:
        - bearerAuth: []
      summary: Getting history of user ticket transaction
      operationId: GetHistory
      description: Getting history of user ticket transaction * user must login
      tags:
        - Users
      parameters:
        - in: header
          name: token
          description: Token user from login
          required: true
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NCwibmFtZSI6bnVsbCwicm9sZSI6Im1lbWJlciIsImVtYWlsIjoidGVzdEBnbWFpbC5jb20iLCJpYXQiOjE2Njk1MzExMDJ9.QsScd8E0t5kIjvnJqwKCl7Vp_ZzcZL33QYHfsn3tGkM
      responses:
        "200":
          $ref: "#/components/responses/UserHistoryRes"
        "400":
          description: "Fail"
          
  /v1/user/notify:
    get:
      security:
        - bearerAuth: []
      summary: Send notify to the Specific user
      operationId: notify
      description: Send notify E.g user buy ticket, promotion, etc
      tags:
        - Users
      parameters:
        - in: header
          name: token
          description: Token user from login
          required: true
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NCwibmFtZSI6bnVsbCwicm9sZSI6Im1lbWJlciIsImVtYWlsIjoidGVzdEBnbWFpbC5jb20iLCJpYXQiOjE2Njk1MzExMDJ9.QsScd8E0t5kIjvnJqwKCl7Vp_ZzcZL33QYHfsn3tGkM
      responses:
        "200":
          $ref: "#/components/responses/UserNotifRes"
        "400":
          description: "FAIL"

  /v1/admin/all:
    get:
      security:
        - bearerAuth: []
      summary: Get all of users
      operationId: GetAllUser
      description: Get all of the users by the admin authorization
      tags:
      - Admins
      parameters:
        - in: header
          name: token
          description: Token for authentication admin
          required: true
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NCwibmFtZSI6bnVsbCwicm9sZSI6Im1lbWJlciIsImVtYWlsIjoidGVzdEBnbWFpbC5jb20iLCJpYXQiOjE2Njk1MzExMDJ9.QsScd8E0t5kIjvnJqwKCl7Vp_ZzcZL33QYHfsn3tGkM
      responses:
        "200":
          $ref: "#/components/responses/GetUsers"
        "400":
          description: Fail
      
  /v1/admin/detail/{id}:
    get:
      security:
        - bearerAuth: []
      summary: Get user detail
      operationId: GetUserDetail
      description: Get detail user by admin
      tags:
      - Admins
      parameters:
        - in: header
          name: token
          description: Token for authentication admin
          required: true
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NCwibmFtZSI6bnVsbCwicm9sZSI6Im1lbWJlciIsImVtYWlsIjoidGVzdEBnbWFpbC5jb20iLCJpYXQiOjE2Njk1MzExMDJ9.QsScd8E0t5kIjvnJqwKCl7Vp_ZzcZL33QYHfsn3tGkM
        - in: path
          name: id
          description: id of the user
          required: true
          schema:
            type: integer
            example: 1
      responses:
        "200":
          $ref: "#/components/responses/DataUser"
        "400":
          description: Fail

    put:
      security:
        - bearerAuth: []
      summary: Update admin
      operationId: UpdateAdmin
      description: Update admin by using admin authorization
      tags:
      - Admins
      parameters:
        - in: header
          name: token
          description: Token for authentication admin
          required: true
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NCwibmFtZSI6bnVsbCwicm9sZSI6Im1lbWJlciIsImVtYWlsIjoidGVzdEBnbWFpbC5jb20iLCJpYXQiOjE2Njk1MzExMDJ9.QsScd8E0t5kIjvnJqwKCl7Vp_ZzcZL33QYHfsn3tGkM
        - in: path
          name: id
          description: id of the user
          required: true
          schema:
            type: integer
            example: 1
      requestBody:
        $ref: "#/components/requestBodies/UserUpdate"
      responses:
        "200":
          $ref: "#/components/responses/DataUser"
        "400":
          description: Fail

    delete:
      security:
        - bearerAuth: []
      summary: Get user detail
      operationId: GetDetail
      description: Get detail user by admin
      tags:
      - Admins
      parameters:
        - in: header
          name: token
          description: Token for authentication admin
          required: true
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NCwibmFtZSI6bnVsbCwicm9sZSI6Im1lbWJlciIsImVtYWlsIjoidGVzdEBnbWFpbC5jb20iLCJpYXQiOjE2Njk1MzExMDJ9.QsScd8E0t5kIjvnJqwKCl7Vp_ZzcZL33QYHfsn3tGkM
        - in: path
          name: id
          description: id of the user
          required: true
          schema:
            type: integer
            example: 1
      responses:
        "200":
          description: "Success deleting"
        "400":
          description: Fail

  /v1/admin/register:
    post:
      security:
        - bearerAuth: []
      summary: Create new admin
      operationId: RegisterAdmin
      description: Create new admin using admin authorization
      tags:
      - Admins
      parameters:
        - in: header
          name: token
          description: Token for authentication admin
          required: true
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NCwibmFtZSI6bnVsbCwicm9sZSI6Im1lbWJlciIsImVtYWlsIjoidGVzdEBnbWFpbC5jb20iLCJpYXQiOjE2Njk1MzExMDJ9.QsScd8E0t5kIjvnJqwKCl7Vp_ZzcZL33QYHfsn3tGkM
      requestBody:
        $ref: "#/components/requestBodies/CreateAdmin"
      responses:
        "200":
          $ref: "#/components/responses/UserRegisterResponse"
        "400":
          description: Fail
          
  /v1/ticket:
    get:
      security:
        - bearerAuth: []
      summary: Get List of ticket in database
      operationId: GetTickets
      description: Get all tickets in the app
      tags:
      - Tickets
      parameters:
        - in: header
          name: token
          description: Token for authentication admin
          required: true
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NCwibmFtZSI6bnVsbCwicm9sZSI6Im1lbWJlciIsImVtYWlsIjoidGVzdEBnbWFpbC5jb20iLCJpYXQiOjE2Njk1MzExMDJ9.QsScd8E0t5kIjvnJqwKCl7Vp_ZzcZL33QYHfsn3tGkM
      responses:
        "200":
          $ref: "#/components/responses/GetTicketsRes"
        "400":
          description: "FAIL"
    
    post:
      security:
        - bearerAuth: []
      summary: Creating new ticket
      operationId: CreateTicket
      description: Creating new ticket by admin authorization
      tags:
        - Tickets
      parameters:
        - in: header
          name: token
          description: Token for authentication admin
          required: true
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NCwibmFtZSI6bnVsbCwicm9sZSI6Im1lbWJlciIsImVtYWlsIjoidGVzdEBnbWFpbC5jb20iLCJpYXQiOjE2Njk1MzExMDJ9.QsScd8E0t5kIjvnJqwKCl7Vp_ZzcZL33QYHfsn3tGkM
      requestBody:
        $ref: "#/components/requestBodies/TicketReq"
      responses:
        "200":
          $ref: "#/components/responses/CreateTicketRes"
        "400":
          description: "FAIL"
      
  /v1/ticket-doms:
    get:
      summary: Get List of domestic ticket in database
      description: Menampilkan semua daftar tiket penerbangan domestik
      tags:
      - Tickets
      responses:
        "200":
          $ref: "#/components/responses/GetTicketsRes"
        "400":
          description: "FAIL"
          
  /v1/ticket-intr:
    get:
      summary: Get List of international ticket in database
      description: Menampilkan semua daftar tiket penerbangan intenasional
      tags:
      - Tickets
      responses:
        "200":
          $ref: "#/components/responses/GetTicketsRes"
        "400":
          description: "FAIL"
          
  /v1/ticket/{id}:
    get:
      security:
        - bearerAuth: []
      summary: Getting detail ticket
      operationId: GetTicket
      description: Getting detail ticket
      tags:
        - Tickets
      parameters:
        - in: header
          name: token
          description: Token for authentication user
          required: true
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NCwibmFtZSI6bnVsbCwicm9sZSI6Im1lbWJlciIsImVtYWlsIjoidGVzdEBnbWFpbC5jb20iLCJpYXQiOjE2Njk1MzExMDJ9.QsScd8E0t5kIjvnJqwKCl7Vp_ZzcZL33QYHfsn3tGkM
        - in: path
          name: id
          description: for getting spesific ticket
          required: true
          schema:
            type: string
            example: 1
      responses:
        "200":
          $ref: "#/components/responses/DetailTicketRes"
        "400":
          description: "FAIL"
          
    put:
      security:
        - bearerAuth: []
      summary: Updating ticket
      operationId: UpdateTicket
      description: Updating ticket
      tags:
        - Tickets
      parameters:
        - in: header
          name: token
          description: Token for authentication admin
          required: true
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NCwibmFtZSI6bnVsbCwicm9sZSI6Im1lbWJlciIsImVtYWlsIjoidGVzdEBnbWFpbC5jb20iLCJpYXQiOjE2Njk1MzExMDJ9.QsScd8E0t5kIjvnJqwKCl7Vp_ZzcZL33QYHfsn3tGkM
        - in: path
          name: id
          description: for getting spesific ticket
          required: true
          schema:
            type: string
            example: 1
      requestBody:
        $ref: "#/components/requestBodies/TicketReq"
      responses:
        "200":
          description: success updating
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Update Successfully"
            
        "400":
          description: "FAIL"
      
    delete:
      security:
        - bearerAuth: []
      summary: Deleting from database
      operationId: DeleteTicket
      description: Deleting ticket from database
      tags:
        - Tickets
      parameters:
        - in: header
          name: token
          description: Token for authentication admin
          required: true
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NCwibmFtZSI6bnVsbCwicm9sZSI6Im1lbWJlciIsImVtYWlsIjoidGVzdEBnbWFpbC5jb20iLCJpYXQiOjE2Njk1MzExMDJ9.QsScd8E0t5kIjvnJqwKCl7Vp_ZzcZL33QYHfsn3tGkM
        - in: path
          name: id
          description: for getting spesific ticket
          required: true
          schema:
            type: string
            example: 1
      responses:
        "200":
          description: "SUCCESS DELETING"
        "400":
          description: "FAIL"
          
  /v1/trans:
    get:
      tags:
        - transaction
      summary: Displays a list of transactions the user has made
      description: Menampilkan semua daftar transaksi yang telah dilakukan oleh member, routes ini diperuntukan role admin dan superadmin.
      responses:
        '200':
          description: Successful get list transaction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
            application/xml:
              schema:
                $ref: '#/components/schemas/Transaction'
        '400':
          description: Fail
          
  /v1/trans/{ticketId}:
    post:
      tags:
        - transaction
      summary: User makes a ticket transaction
      description: Digunakan untuk melakukan pemesanan (booking) tiket oleh member, dengan membawa parameter id dari tiket yang akan dipesan.
      parameters:
        - name: ticketId
          in: path
          description: Id dari Ticket yang akan dipesan
          required: true
          schema:
            type: integer
            format: int64
            example: 27
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionReq'
          application/xml:
            schema:
              $ref: '#/components/schemas/TransactionReq'
      responses:
        '201':
          description: Successful update transaction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionRes'
            application/xml:
              schema:
                $ref: '#/components/schemas/TransactionRes'
        '400':
          description: Fail
          
  /v1/trans/{transId}:
    put:
      tags:
        - transaction
      summary: Update status paid transaction
      description: Digunakan untuk mengubah status pemesanan (isPaid) yang sebelumnya "FALSE" menjadi "TRUE", sehingga nomor kursi yang dipesan akan muncul pada keterangan detail tiket.
      parameters:
        - name: transId
          in: path
          description: Id dari Transaction
          required: true
          schema:
            type: integer
            format: int64
            example: 27
      responses:
        '201':
          description: Successful update isPaid value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutTransactionRes'
            application/xml:
              schema:
                $ref: '#/components/schemas/PutTransactionRes'
        '400':
          description: Fail
          
  /v1/trans/cancel/{transId}:
    put:
      tags:
        - transaction
      summary: Update status Cancelled transaction
      description: Digunakan untuk mengubah status pemesanan (notCancelled) yang sebelumnya "TRUE" menjadi "FALSE", sehingga nomor kursi yang dipesan akan tidak muncul pada keterangan detail tiket.
      parameters:
        - name: transId
          in: path
          description: Id dari Transaction
          required: true
          schema:
            type: integer
            format: int64
            example: 27
      responses:
        '201':
          description: Successful update notCancelled value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutTransactionResCancel'
            application/xml:
              schema:
                $ref: '#/components/schemas/PutTransactionResCancel'
        '400':
          description: Fail
  
  /v1/notify:
    get:
      tags:
        - notify
      summary: Return list notification in database
      description: Digunakan untuk menampilkan list semua data yang terdapat di database.
      responses:
        '200':
          description: Successful get all notification
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetNotify'
            application/xml:
              schema:
                $ref: '#/components/schemas/GetNotify'
        '400':
          description: Fail
          
  /v1/notify/{id}:
    put:
      tags:
        - notify
      summary: Update status read notification
      description: Digunakan untuk mengubah status baca (isRead) yang sebelumnya "FALSE" menjadi "TRUE".
      parameters:
        - name: id
          in: path
          description: Id dari notifikasi
          required: true
          schema:
            type: integer
            format: int64
            example: 27
      responses:
        '204':
          description: Successful update isRead value
        '400':
          description: Fail
      
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  requestBodies:
    UserRegister:
      description: Register for User
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                example: "udin@gmail.com"
              password:
                type: string
                example: 12345
              name:
                type: string
                example: "nurdin nur"
              image:
                type: string
                example: "Photo1.png"
              phone:
                type: string
                example: "0812398921"
              birth:
                type: string
                example: "2022-10-21T15:27:36.435Z"

    UserUpdate:
      description: User Update Data
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                example: "Kiki"
              image:
                type: string
                example: "Paris.jpg"
              phone:
                type: string
                example: 08123456789
              birth:
                type: string
                example: "2022-10-21T15:27:36.435Z"
                
    LoginRequest:
      description: Login Request Body
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                example: "udin@gmail.com"
              password:
                type: string
                example: "halo12345"
    
    CreateAdmin:
      description: Create admin
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              name:
                type: string
                example: "Admin Shaka"
              email:
                type: string
                example: "adminshaka@gmail.com"
              password:
                type: string
                example: "adminkeren123"
                
    TicketReq:
      description: Data Ticket
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              flight:
                type: string
                example: "Domestic"
              departure:
                type: string
                example: "Bandar Udara Internasional Adisumarmo, Solo"
              departureCode:
                type: string
                example: "SOC"
              destination:
                type: string
                example: "Bandar Udara Internasional Jenderal Ahmad Yani, Semarang"
              destinationCode:
                type: string
                example: "SRG"
              type:
                type: string
                example: "Adult"
              class:
                type: string
                example: "Economy"
              takeOff:
                type: string
                example: "01/14/2022 18:00:00"
              arrive:
                type: string
                example: "01/14/2022 18:35:00"
              price:
                type: integer
                example: 950000
              totalChair:
                type: integer
                example: 100
    
  responses:
    LoginResponse:
      description: Success Login
      content:
        application/json:
          schema:
            type: object
            properties:
              token:
                type: string
                example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NCwibmFtZSI6bnVsbCwicm9sZSI6Im1lbWJlciIsImVtYWlsIjoidGVzdEBnbWFpbC5jb20iLCJpYXQiOjE2Njk1MzExMDJ9.QsScd8E0t5kIjvnJqwKCl7Vp_ZzcZL33QYHfsn3tGkM"
    
    UserRegisterResponse:
      description: Create new user success
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: "CREATED"
              data:
                type: object
                properties:
                  users:
                    $ref: "#/components/schemas/Users"
    
    Unauthorized:
      description: User don't have permisson because unauthorized
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: "UNAUTHORIZED"
              errors:
                type: string
                example: "You don't have permisson, please login!"

    FailedUpdate:
      description: User enters the wrong data and does not match the column
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: "FAIL"
              errors:
                type: string
                example: "Input doesn't match with column"

    DataUser:
      description: contain all data user
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: "SUCCESS"
              data:
                type: object
                properties:
                  users:
                    $ref: "#/components/schemas/Users"

    GetUsers:
      description: Register for User
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: "OK"
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    email:
                      type: string
                    password:
                      type: string
                    role:
                      type: string
                    isExist:
                      type: boolean
                    updateAt:
                      type: string
                    createdAt:
                      type: string
                    name:
                      type: string
                    image:
                      type: string
                    phone:
                      type: string
                    birth:
                      type: string
                example:
                - id: 1
                  email: kiki@gmail.com
                  password: $2b$10$eN9y23azrH5pNbE/gAWqdeYEr3IJ7I7vIAfGUCzDaIpErR2mJhewe
                  role: member
                  isExist: true
                  updateAt: "2022-11-27T06:37:22.652Z"
                  createdAt: "2022-11-27T06:37:22.652Z"
                  name: "kiki"
                  image: "bali.png"
                  phone: 08123456789
                  birth: "2022-11-27T06:37:22.652Z"
                - id: 2
                  email: kiko@gmail.com
                  password: $2b$10$eN9y23azrH5pNbE/gAWqdeYEr3IJ7I7vIAfGUCzDaIpErR2mJhewe
                  role: member
                  isExist: true
                  updateAt: "2022-11-27T06:37:22.652Z"
                  createdAt: "2022-11-27T06:37:22.652Z"
                  name: "kiko"
                  image: "paris.png"
                  phone: 08123456789
                  birth: "2022-11-27T06:37:22.652Z"
                  
    UserNotifRes:
      description: User notif response
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: "OK"
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    userId:
                      type: integer
                    desc:
                      type: string
                    isRead:
                      type: boolean
                    type:
                      type: string
                    createdAt:
                      type: string
                    UpdateAt:
                      type: string
                example:
                - id: 1
                  userId: 2
                  desc: "Melakukan pemesanan ticket dengan ID TRANSAKSI: TI007T19A26"
                  isRead: false
                  type: "INFO"
                  createdAt: "2022-11-29T03:17:33.528Z"
                  updatedAt: "2022-11-29T03:17:33.528Z"
                - id: 8
                  userId: 2
                  desc: "Melakukan pemesanan ticket dengan ID TRANSAKSI: TI007T19A26"
                  isRead: false
                  type: "INFO"
                  createdAt: "2022-11-29T03:17:33.528Z"
                  updatedAt: "2022-11-29T03:17:33.528Z"
                  
    GetTicketsRes:
      description: Getting tickets response
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: "OK"
              data:
                type: object
                properties:
                  tickets:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        code:
                          type: string
                        flight:
                          type: string
                        departure:
                          type: string
                        destination:
                          type: string
                        destinationCode:
                          type: string
                        type:
                          type: string
                        class:
                          type: string
                        takeOff:
                          type: string
                        arrive:
                          type: string
                        price:
                          type: integer
                        totalChair:
                          type: integer
                        createdAt:
                          type: string
                        updatedAt:
                          type: string
                    example:
                    - id: 39
                      code: "DO22TO14AR14012"
                      flight: "DOMESTIC"
                      departure: "Bandar Udara Internasional Minangkabau, Padang"
                      departureCode: "PDG"
                      destination: "Bandar Udara internasional Syamsudin Noor, Banjarmasin"
                      destinationCode: "BDJ"
                      type: "Adult"
                      class: "Economy"
                      takeOff: "2022-01-13T02:22:00.000Z"
                      arrive: "2022-01-13T02:22:00.000Z"
                      price: 1000000
                      totalChair: 100
                      createdAt: "2022-01-13T02:22:00.000Z"
                      updatedAt: "2022-01-13T02:22:00.000Z"
                    - id: 40
                      code: "IN22TO14AR14012"
                      flight: "INTERNATIONAL"
                      departure: "Bandar Udara Internasional Jenderal Ahmad Yani, Semarang"
                      departureCode: "SRG"
                      destination: "Bandar Udara Internasional Sultan Mahmud Badaruddin II, Palembang"
                      destinationCode: "PLM"
                      type: "Adult"
                      class: "Bussiness"
                      takeOff: "2022-01-13T02:22:00.000Z"
                      arrive: "2022-01-13T02:22:00.000Z"
                      price: 3000000
                      totalChair: 100
                      createdAt: "2022-01-13T02:22:00.000Z"
                      updatedAt: "2022-01-13T02:22:00.000Z"
                      
    CreateTicketRes:
      description: Create ticket res
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: "CREATED"
              data:
                type: object
                properties:
                  id:
                    type: integer
                    example: 46
                  flight:
                    type: string
                    example: "DOMESTIC"
                  departure:
                    type: string
                    example: "Bandar Udara Internasional Adisumarmo, Solo"
                  destination:
                    type: string
                    example: "Bandar Udara Internasional Jenderal Ahmad Yani, Semarang"
                  type:
                    type: string
                    example: "Adult"
                  class:
                    type: string
                    example: "Economy"
                  takeOff:
                    type: string
                    example: "2022-01-14T11:00:00.000Z"
                  arrive:
                    type: string
                    example: "2022-01-14T11:00:00.000Z"
                  price:
                    type: integer
                    example: 950000
                  departureCode:
                    type: string
                    example: "SOC"
                  destinationCode:
                    type: string
                    example: "SRG"
                  totalChair:
                    type: integer
                    example: 100
                  code: 
                    type: string
                    example: "TI010T14A14"
                  updatedAt:
                    type: string
                    example: "2022-01-14T11:00:00.000Z"
                  createdAt:
                    type: string
                    example: "2022-01-14T11:00:00.000Z"
                    
    DetailTicketRes:
      description: Detail of ticket
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: "CREATED"
              data:
                type: object
                properties:
                  id:
                    type: integer
                    example: 46
                  code: 
                    type: string
                    example: "TI010T14A14"
                  departure:
                    type: string
                    example: "Bandar Udara Internasional Adisumarmo, Solo"
                  departureCode:
                    type: string
                    example: "SOC"
                  destination:
                    type: string
                    example: "Bandar Udara Internasional Jenderal Ahmad Yani, Semarang"
                  destinationCode:
                    type: string
                    example: "SRG"
                  type:
                    type: string
                    example: "Adult"
                  class:
                    type: string
                    example: "Economy"
                  takeOff:
                    type: string
                    example: "2022-01-14T11:00:00.000Z"
                  arrive:
                    type: string
                    example: "2022-01-14T11:00:00.000Z"
                  price:
                    type: integer
                    example: 950000
                  totalChair:
                    type: integer
                    example: 100
                  createdAt:
                    type: string
                    example: "2022-01-14T11:00:00.000Z"
                  updatedAt:
                    type: string
                    example: "2022-01-14T11:00:00.000Z"
                  bookingBy:
                    type: array
                    items:
                      type: object
                      properties:
                        userId:
                          type: integer
                          example: 2
                        numChair:
                          type: integer
                          example: 5
                          
    UserHistoryRes:
      description: User history transaction response
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: "OK"
              data:
                type: object
                properties:
                  history:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        ticketId:
                          type: integer
                        ticketCode:
                          type: string
                        userId:
                          type: integer
                        date:
                          type: string
                        orderBy:
                          type: string
                        ktp:
                          type: string
                        isPaid:
                          type: boolean
                        numChair:
                          type: integer
                        createdAt:
                          type: string
                        updatedAt:
                          type: string
                        ticket:
                          type: object
                          properties:
                            id:
                              type: integer
                            destination:
                              type: string
                            type:
                              type: string
                            class:
                              type: string
                            departure:
                              type: string
                            takeOff:
                              type: string
                            arrive:
                              type: string
                            code:
                              type: string
                            price:
                              type: integer
                            createdAt:
                              type: string
                            updateAt:
                              type: string
                    example:
                    - id: 2
                      ticketId: 9
                      ticketCode: "TI007T19A26"
                      userId: 2
                      date: null
                      orderBy: "Komarudin"
                      ktp: "112390905555"
                      isPaid: false
                      numChair: null
                      createdAt: "2022-11-25T11:36:49.397Z"
                      updatedAt: "2022-11-25T11:36:49.397Z"
                      ticket:
                        id: 9
                        destination: "Jakarta"
                        type: "Adult"
                        class: "Economy"
                        departure: "Makassar"
                        takeOff: "2022-11-25T11:36:49.397Z"
                        arrive: "2022-11-27T00:36:49.397Z"
                        code: "TI007T19A26"
                        price: 2500000
                        createdAt: "2022-11-25T10:12:52.857Z"
                        updatedAt: "2022-11-25T14:07:57.791Z"
                    - id: 3
                      ticketId: 9
                      ticketCode: "TI007T19A26"
                      userId: 2
                      date: null
                      orderBy: "Komarudin"
                      ktp: "112390905555"
                      isPaid: true
                      numChair: 20
                      createdAt: "2022-11-25T11:36:49.397Z"
                      updatedAt: "2022-11-25T11:36:49.397Z"
                      ticket:
                        id: 9
                        destination: "Jakarta"
                        type: "Adult"
                        class: "Economy"
                        departure: "Makassar"
                        takeOff: "2022-11-25T11:36:49.397Z"
                        arrive: "2022-11-27T00:36:49.397Z"
                        code: "TI007T19A26"
                        price: 2500000
                        createdAt: "2022-11-25T10:12:52.857Z"
                        updatedAt: "2022-11-25T14:07:57.791Z"
                        
  schemas:
    Users:
      type: object
      properties:
        id:
          type: integer
          example: 1
        email:
          type: string
          example: "kiki@gmail.com"
        password:
          type: string
          example: "$2b$10$eN9y23azrH5pNbE/gAWqdeYEr3IJ7I7vIAfGUCzDaIpErR2mJhewe"
        role:
          type: string
          example: "member"
        isExist:
          type: boolean
          example: true
        updateAt:
          type: string
          example: "2022-11-27T06:37:22.652Z"
        createdAt:
          type: string
          example: "2022-11-27T06:37:22.652Z"
        name:
          type: string
          example: "kiki pamela"
        image:
          type: string
          example: null
        phone:
          type: string
          example: null
        birth:
          type: string
          example: null
        deletedAt:
          type: string
          example: "2022-11-27T06:37:22.652Z"
    
    UserNotFound:
      type: object
      properties:
        message:
          type: string
          example: "User not found"
          
    WrongPassword:
      type: object
      properties:
        message:
          type: string
          example: "Wrong Password"
          
    EmailExistResponse:
      type: object
      properties:
        message:
          type: string
          example: "This email already exist"
          
    BiggerThan2MB:
      type: object
      properties:
        msg:
          type: string
          example: "Bad Request"
        status:
          type: integer
          example: 400
        errors:
          type: string
          example: "File size is bigger than 2 MB"
          
    BadReqUpload:
      type: object
      properties:
        msg:
          type: string
          example: "BAD REQUEST"
        status:
          type: integer
          example: 400
        errors:
          type: string
          example: "Format file must be PNG, JPG or JPEG"
          
    UploadFail:
      type: object
      properties:
        status:
          type: string
          example: "UPLOAD FAIL"
        errors:
          type: string
          example: "CloudinaryError: Error in sending request to server - Failed to connect to api.cloudinary.com port 443:"
          
    GetNotify:
      type: object
      properties:
        status:
          type: string
          example: OK
        data:
          type: object
          properties:
            notify:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  userId:
                    type: integer
                  desc:
                    type: string
                  type:
                    type: string
                  isRead:
                    type: boolean
                  createdAt:
                    type: string
                  updatedAt:
                    type: string
              example:
              - id: 25
                userId: 2
                desc: "Anda telah membatalkan atau menyelesaikan pemesanan dengan kode pemesanan: 002037AMQMLG021."
                type: INFO
                isRead: false
                createdAt: "2022-11-29T14:50:00.006Z"
                updatedAt: "2022-11-29T14:50:00.006Z"
              - id: 24
                userId: 3
                desc: "Terimakasih, anda telah melakukan pembayaran dengan kode pemesanan: 002037AMQMLG021."
                type: INFO
                isRead: false
                createdAt: "2022-11-29T14:50:00.006Z"
                updatedAt: "2022-11-29T14:50:00.006Z"
      xml:
        name: notify
    PutTransactionResCancel:
      type: object
      properties:
        status:
          type: string
          example: CREATED
        data:
          type: object
          properties:
            id:
              type: integer
              example: 25
            desc:
              type: string
              example: "Anda telah membatalkan atau menyelesaikan pemesanan dengan kode pemesanan: 002037AMQMLG021."
            userId:
              type: integer
              example: 2
            isRead:
              type: boolean
              example: false
            type:
              type: string
              example: INFO
            createdAt:
              type: string
              example: "2022-11-29T14:50:00.006Z"
            updatedAt:
              type: string
              example: "2022-11-29T14:50:00.006Z"
    PutTransactionRes:
      type: object
      properties:
        status:
          type: string
          example: CREATED
        data:
          type: object
          properties:
            id:
              type: integer
              example: 24
            desc:
              type: string
              example: "Terimakasih, anda telah melakukan pembayaran dengan kode pemesanan: 002037AMQMLG021."
            userId:
              type: integer
              example: 2
            isRead:
              type: boolean
              example: false
            type:
              type: string
              example: INFO
            createdAt:
              type: string
              example: "2022-11-29T14:20:46.598Z"
            updatedAt:
              type: string
              example: "2022-11-29T14:20:46.598Z"
    TransactionReq:
      type: object
      properties:
        orderBy:
          type: string
          example: Peroronchino
        ktp:
          type: string
          example: "112390905555"
        numChair:
          type: integer
          example: 5
    TransactionRes:
      type: object
      properties:
        status:
          type: string
          example: CREATED
        data:
          type: object
          properties:
            id:
              type: integer
              example: 23
            desc:
              type: string
              example: "Anda telah melakukan pemesanan ticket dengan kode pemesanan: 002037AMQMLG021, segera lakukan pembayaran."
            userId:
              type: integer
              example: 2
            isRead:
              type: boolean
              example: false
            type:
              type: string
              example: INFO
            createdAt:
              type: string
              example: "2022-11-29T14:20:46.598Z"
            updatedAt:
              type: string
              example: "2022-11-29T14:20:46.598Z"
    Transaction:
      type: object
      properties:
        status:
          type: string
          example: OK
        data:
          type: object
          properties:
            transaction:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  code:
                    type: string
                  ticketId:
                    type: integer
                  ticketCode:
                    type: string
                  userId:
                    type: integer
                  date:
                    type: string
                  orderBy:
                    type: string
                  ktp:
                    type: string
                  isPaid:
                    type: boolean
                  notCancelled:
                    type: boolean
                  numChair:
                    type: integer
                  createdAt:
                    type: string
                  updatedAt:
                    type: string
              example:
              - id: 21
                code: "002037AMQMLG020"
                ticketId: 37
                ticketCode: "TI001T03A03"
                userId: 2
                date: "2022-11-29T12:54:28.473Z"
                orderBy: "Momonga Sama"
                ktp: "112390905555"
                isPaid: false
                notCancelled: true
                numChair: 1
                createdAt: "2022-11-29T12:54:28.473Z"
                updatedAt: "2022-11-29T12:54:28.473Z"
              - id: 20
                code: "002017JKTSGP019"
                ticketId: 17
                ticketCode: "TI015T19A26"
                userId: 2
                date: "2022-11-29T12:54:28.473Z"
                orderBy: "Momonga Sama"
                ktp: "112390905555"
                isPaid: true
                notCancelled: true
                numChair: 5
                createdAt: "2022-11-29T12:54:28.473Z"
                updatedAt: "2022-11-29T12:54:28.473Z"
  #     xml:
  #       name: transaction
  # securitySchemes:
  #   bearerToken:
  #     type: http
  #     scheme: "bearer"